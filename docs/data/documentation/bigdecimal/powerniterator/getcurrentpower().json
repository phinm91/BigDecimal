{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/PowerNIterator"]]},"abstract":[{"type":"text","text":"Returns the current power."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentPower"},{"kind":"text","text":"() -> "},{"text":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","preciseIdentifier":"s:10BigDecimalAAV","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The current power."}]}]}],"variants":[{"paths":["\/documentation\/bigdecimal\/powerniterator\/getcurrentpower()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/PowerNIterator\/getCurrentPower()"},"metadata":{"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getCurrentPower","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:10BigDecimalAAV","kind":"typeIdentifier","text":"BigDecimal"}],"symbolKind":"method","title":"getCurrentPower()","externalID":"s:10BigDecimal14PowerNIteratorV010getCurrentC0A2AVyF","modules":[{"name":"BigDecimal"}]},"references":{"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/exponent":{"url":"\/documentation\/bigdecimal\/bigdecimal\/exponent","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The signed exponent - the value of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"self"}]},{"type":"text","text":" is "},{"inlineContent":[{"text":"self.significand","type":"text"}],"type":"emphasis"},{"type":"text","text":" *"},{"type":"text","text":" "},{"type":"text","text":"10^"},{"inlineContent":[{"type":"text","text":"self.exponent"}],"type":"emphasis"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"exponent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","title":"exponent","type":"topic"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal":{"url":"\/documentation\/bigdecimal","type":"topic","abstract":[{"text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper","type":"text"},{"type":"text","text":" "},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"title":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","kind":"symbol","role":"collection"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/digits":{"kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/digits","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"digits","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BInt","preciseIdentifier":"s:6BigInt4BIntV"}],"role":"symbol","abstract":[{"type":"text","text":"The signed BInt significand"}],"title":"digits","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/maxDigits":{"kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/maxdigits","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"maxDigits","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol","abstract":[],"title":"maxDigits","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BigDecimal","kind":"identifier"}],"title":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BigDecimal","kind":"identifier"}],"abstract":[{"type":"text","text":"A signed decimal value of unbounded precision (actually there is a"},{"type":"text","text":" "},{"text":"practical limit defined by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits"},{"type":"text","text":" of 200 that the user can change)."},{"type":"text","text":" "},{"text":"A ","type":"text"},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","isActive":true},{"type":"text","text":" value is represented as a signed "},{"code":"BInt","type":"codeVoice"},{"text":" significand","type":"text"},{"type":"text","text":" "},{"text":"and a signed ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" exponent that is limited to ten digits.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The value of a Self is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},{"type":"text","text":" * 10^"},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","isActive":true},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/PowerNIterator/getCurrentPower()":{"abstract":[{"type":"text","text":"Returns the current power."}],"type":"topic","role":"symbol","url":"\/documentation\/bigdecimal\/powerniterator\/getcurrentpower()","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/PowerNIterator\/getCurrentPower()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentPower","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10BigDecimalAAV","text":"BigDecimal"}],"title":"getCurrentPower()","kind":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/PowerNIterator":{"navigatorTitle":[{"text":"PowerNIterator","kind":"identifier"}],"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/PowerNIterator","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PowerNIterator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/bigdecimal\/powerniterator","type":"topic","title":"PowerNIterator"}}}