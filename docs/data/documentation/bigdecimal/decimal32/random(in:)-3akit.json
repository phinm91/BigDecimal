{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"range"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SN","text":"ClosedRange","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"range","content":[{"inlineContent":[{"type":"text","text":"The range in which to create a random value."},{"text":" ","type":"text"},{"text":"Must be finite.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A random value within the bounds of "},{"code":"range","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method to generate a floating-point value within a specific"},{"text":" ","type":"text"},{"text":"range. This example creates three new values in the range","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"10.0 ... 20.0"},{"text":".","type":"text"}]},{"syntax":"swift","code":["    for _ in 1...3 {","        print(Double.random(in: 10.0 ... 20.0))","    }","    \/\/ Prints \"18.1900709259179\"","    \/\/ Prints \"14.2286325689993\"","    \/\/ Prints \"13.1485686260762\""],"type":"codeListing"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"random()","type":"codeVoice"},{"text":" static method chooses a random value from a continuous","type":"text"},{"type":"text","text":" "},{"text":"uniform distribution in ","type":"text"},{"code":"range","type":"codeVoice"},{"type":"text","text":", and then converts that value to the"},{"type":"text","text":" "},{"type":"text","text":"nearest representable value in this type. Depending on the size and span"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"code":"range","type":"codeVoice"},{"type":"text","text":", some concrete values may be represented more frequently than"},{"text":" ","type":"text"},{"type":"text","text":"others."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is equivalent to calling "},{"type":"codeVoice","code":"random(in:using:)"},{"type":"text","text":", passing in the"},{"type":"text","text":" "},{"type":"text","text":"systemâ€™s default random generator."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32\/random(in:)-3akit"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigdecimal\/decimal32\/random(in:)-3akit"]}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Returns a random value within the specified range."}],"hierarchy":{"paths":[["doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32\/DecimalFloatingPoint-Implementations"]]},"metadata":{"modules":[{"name":"BigDecimal"}],"roleHeading":"Type Method","title":"random(in:)","conformance":{"constraints":[{"type":"codeVoice","code":"RawSignificand"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","role":"symbol","externalID":"s:10BigDecimal0B13FloatingPointPAAs17FixedWidthInteger14RawSignificandRpzrlE6random2inxSNyxG_tFZ::SYNTHESIZED::s:10BigDecimal9Decimal32V","extendedModule":"BigDecimal"},"references":{"doc://bigdecimal.BigDecimal/documentation/BigDecimal":{"url":"\/documentation\/bigdecimal","type":"topic","abstract":[{"text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper","type":"text"},{"type":"text","text":" "},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"title":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","kind":"symbol","role":"collection"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/Decimal32":{"navigatorTitle":[{"text":"Decimal32","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32","title":"Decimal32","kind":"symbol","url":"\/documentation\/bigdecimal\/decimal32","abstract":[{"text":"Implementation of the 32-bit Decimal32 floating-point operations from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"IEEE STD 754-2019 for Floating-Point Arithmetic."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Decimal32"}],"role":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/Decimal32/DecimalFloatingPoint-Implementations":{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32\/DecimalFloatingPoint-Implementations","title":"DecimalFloatingPoint Implementations","url":"\/documentation\/bigdecimal\/decimal32\/decimalfloatingpoint-implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/Decimal32/random(in:)-3akit":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/bigdecimal\/decimal32\/random(in:)-3akit","abstract":[{"type":"text","text":"Returns a random value within the specified range."}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RawSignificand"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32\/random(in:)-3akit","title":"random(in:)"}}}