{"identifier":{"url":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/setBit(_:of:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"title":"setBit(_:of:)","role":"symbol","roleHeading":"Type Method","modules":[{"name":"BigDecimal"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setBit"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": `Self`","kind":"text"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10BigDecimalAAV","text":"BigDecimal","kind":"typeIdentifier"}],"extendedModule":"BigDecimal","externalID":"s:10BigDecimalAAV6setBit_2ofABSi_ABtFZ","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setBit","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"n","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"x","kind":"internalParam"},{"kind":"text","text":": `Self`"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10BigDecimalAAV","text":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Arguments will be converted to integral numbers using truncation"},{"type":"text","text":" "},{"type":"text","text":"and the result will also be an integral number."},{"text":" ","type":"text"},{"text":"For example:","type":"text"}]},{"type":"codeListing","code":["Self.setBit(20, of: Self.zero) = 1048576"],"syntax":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal"]]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Set the "},{"type":"codeVoice","code":"n"},{"text":"th bit of the number and return the value where ","type":"text"},{"type":"codeVoice","code":"n"},{"text":" ≥ 0.","type":"text"}],"variants":[{"paths":["\/documentation\/bigdecimal\/bigdecimal\/setbit(_:of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/maxDigits":{"kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/maxdigits","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"maxDigits","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol","abstract":[],"title":"maxDigits","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BigDecimal","kind":"identifier"}],"title":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BigDecimal","kind":"identifier"}],"abstract":[{"type":"text","text":"A signed decimal value of unbounded precision (actually there is a"},{"type":"text","text":" "},{"text":"practical limit defined by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits"},{"type":"text","text":" of 200 that the user can change)."},{"type":"text","text":" "},{"text":"A ","type":"text"},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","isActive":true},{"type":"text","text":" value is represented as a signed "},{"code":"BInt","type":"codeVoice"},{"text":" significand","type":"text"},{"type":"text","text":" "},{"text":"and a signed ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" exponent that is limited to ten digits.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The value of a Self is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},{"type":"text","text":" * 10^"},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","isActive":true},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/digits":{"kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/digits","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"digits","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BInt","preciseIdentifier":"s:6BigInt4BIntV"}],"role":"symbol","abstract":[{"type":"text","text":"The signed BInt significand"}],"title":"digits","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal":{"url":"\/documentation\/bigdecimal","type":"topic","abstract":[{"text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper","type":"text"},{"type":"text","text":" "},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"title":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","kind":"symbol","role":"collection"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/setBit(_:of:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setBit","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": `Self`"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10BigDecimalAAV","text":"BigDecimal"}],"title":"setBit(_:of:)","url":"\/documentation\/bigdecimal\/bigdecimal\/setbit(_:of:)","abstract":[{"text":"Set the ","type":"text"},{"type":"codeVoice","code":"n"},{"type":"text","text":"th bit of the number and return the value where "},{"type":"codeVoice","code":"n"},{"type":"text","text":" ≥ 0."}],"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/setBit(_:of:)","kind":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/exponent":{"url":"\/documentation\/bigdecimal\/bigdecimal\/exponent","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The signed exponent - the value of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"self"}]},{"type":"text","text":" is "},{"inlineContent":[{"text":"self.significand","type":"text"}],"type":"emphasis"},{"type":"text","text":" *"},{"type":"text","text":" "},{"type":"text","text":"10^"},{"inlineContent":[{"type":"text","text":"self.exponent"}],"type":"emphasis"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"exponent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","title":"exponent","type":"topic"}}}