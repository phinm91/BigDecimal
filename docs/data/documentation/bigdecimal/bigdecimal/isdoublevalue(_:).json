{"hierarchy":{"paths":[["doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal"]]},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/isDoubleValue(_:)"},"abstract":[{"type":"text","text":"Returns whether the specified "},{"isActive":true,"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","type":"reference"},{"type":"text","text":" value can be represented"},{"type":"text","text":" "},{"type":"text","text":"as "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDoubleValue","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": `Self`"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","isActive":true},{"text":" number to check","type":"text"}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the "},{"code":"value","type":"codeVoice"},{"type":"text","text":" can be represented as "},{"type":"codeVoice","code":"Double"},{"text":" value","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" you can call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/asDouble()"},{"type":"text","text":" "},{"type":"text","text":"without fear of getting "},{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/infinity","isActive":true,"type":"reference"},{"type":"text","text":" or -"},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/infinity","isActive":true},{"type":"text","text":" as result."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example: "},{"code":"BigDecimal.isDoubleValue(BigDecimal(\"1E309\"))","type":"codeVoice"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"because ","type":"text"},{"code":"BigDecimal(\"1E309\").asDouble()","type":"codeVoice"},{"type":"text","text":" returns "},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/infinity","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"Note: This method does ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"strong"},{"text":" check for possible loss of precision.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example "},{"type":"codeVoice","code":"BigDecimalMath.isDoubleValue(BigDecimal(\"1.23400000000000000000000000000000001\"))"},{"text":" will return ","type":"text"},{"type":"codeVoice","code":"true"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"because "},{"type":"codeVoice","code":"BigDecimal(\"1.23400000000000000000000000000000001\").asDouble()"},{"type":"text","text":" returns a valid double value,"},{"text":" ","type":"text"},{"text":"although it loses precision and returns ","type":"text"},{"code":"1.234","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"code":"BigDecimalMath.isDoubleValue(BigDecimal(\"1E-325\"))","type":"codeVoice"},{"text":" will return ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" "},{"text":"although this value is smaller than -","type":"text"},{"type":"codeVoice","code":"Double.greatestFiniteMagnitude"},{"text":" ","type":"text"},{"text":"(and therefore outside the range of values that can be represented as ","type":"text"},{"type":"codeVoice","code":"Double"},{"text":")","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"because "},{"code":"BigDecimal(\"1E-325\").asDouble()","type":"codeVoice"},{"text":" returns ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":" which is a legal"},{"type":"text","text":" "},{"type":"text","text":"value with loss of precision."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigdecimal\/bigdecimal\/isdoublevalue(_:)"]}],"metadata":{"externalID":"s:10BigDecimalAAV13isDoubleValueySbABFZ","modules":[{"name":"BigDecimal"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isDoubleValue","kind":"identifier"},{"text":"(`Self`","kind":"text"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"extendedModule":"BigDecimal","roleHeading":"Type Method","role":"symbol","title":"isDoubleValue(_:)"},"references":{"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/exponent":{"url":"\/documentation\/bigdecimal\/bigdecimal\/exponent","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The signed exponent - the value of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"self"}]},{"type":"text","text":" is "},{"inlineContent":[{"text":"self.significand","type":"text"}],"type":"emphasis"},{"type":"text","text":" *"},{"type":"text","text":" "},{"type":"text","text":"10^"},{"inlineContent":[{"type":"text","text":"self.exponent"}],"type":"emphasis"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"exponent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","title":"exponent","type":"topic"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal":{"url":"\/documentation\/bigdecimal","type":"topic","abstract":[{"text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper","type":"text"},{"type":"text","text":" "},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"title":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","kind":"symbol","role":"collection"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/asDouble()":{"title":"asDouble()","role":"symbol","abstract":[{"inlineContent":[{"type":"text","text":"self"}],"type":"emphasis"},{"text":" as a Double","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/asDouble()","url":"\/documentation\/bigdecimal\/bigdecimal\/asdouble()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asDouble"},{"kind":"text","text":"() -> "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}]},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/infinity":{"title":"infinity","role":"symbol","abstract":[{"type":"text","text":"BigDecimal(‘Infinity’)"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/infinity","url":"\/documentation\/bigdecimal\/bigdecimal\/infinity","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"infinity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10BigDecimalAAV","text":"BigDecimal"}]},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/isDoubleValue(_:)":{"type":"topic","abstract":[{"type":"text","text":"Returns whether the specified "},{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","type":"reference","isActive":true},{"text":" value can be represented","type":"text"},{"type":"text","text":" "},{"text":"as ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isDoubleValue","kind":"identifier"},{"text":"(`Self`","kind":"text"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/isDoubleValue(_:)","kind":"symbol","title":"isDoubleValue(_:)","url":"\/documentation\/bigdecimal\/bigdecimal\/isdoublevalue(_:)"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/maxDigits":{"kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/maxdigits","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"maxDigits","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol","abstract":[],"title":"maxDigits","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/digits":{"kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/digits","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"digits","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BInt","preciseIdentifier":"s:6BigInt4BIntV"}],"role":"symbol","abstract":[{"type":"text","text":"The signed BInt significand"}],"title":"digits","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BigDecimal","kind":"identifier"}],"title":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BigDecimal","kind":"identifier"}],"abstract":[{"type":"text","text":"A signed decimal value of unbounded precision (actually there is a"},{"type":"text","text":" "},{"text":"practical limit defined by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits"},{"type":"text","text":" of 200 that the user can change)."},{"type":"text","text":" "},{"text":"A ","type":"text"},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","isActive":true},{"type":"text","text":" value is represented as a signed "},{"code":"BInt","type":"codeVoice"},{"text":" significand","type":"text"},{"type":"text","text":" "},{"text":"and a signed ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" exponent that is limited to ten digits.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The value of a Self is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},{"type":"text","text":" * 10^"},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","isActive":true},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal"}}}