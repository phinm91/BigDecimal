{"hierarchy":{"paths":[["doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/FloatingPoint-Implementations"]]},"kind":"symbol","abstract":[{"text":"Replaces this value with the remainder of itself divided by the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formRemainder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dividingBy","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"kind":"text","text":": `Self`"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The value to use when dividing this value.","type":"text"}],"type":"paragraph"}],"name":"other"}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"For two finite values ","type":"text"},{"type":"codeVoice","code":"x"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"y"},{"text":", the remainder ","type":"text"},{"type":"codeVoice","code":"r"},{"type":"text","text":" of dividing "},{"code":"x","type":"codeVoice"},{"type":"text","text":" by"},{"type":"text","text":" "},{"type":"codeVoice","code":"y"},{"text":" satisfies ","type":"text"},{"type":"codeVoice","code":"x == y * q + r"},{"type":"text","text":", where "},{"code":"q","type":"codeVoice"},{"text":" is the integer nearest to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"x \/ y"},{"type":"text","text":". If "},{"type":"codeVoice","code":"x \/ y"},{"type":"text","text":" is exactly halfway between two integers, "},{"code":"q","type":"codeVoice"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"type":"text","text":"chosen to be even. Note that "},{"code":"q","type":"codeVoice"},{"text":" is ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"type":"text","text":" "},{"code":"x \/ y","type":"codeVoice"},{"type":"text","text":" computed in"},{"text":" ","type":"text"},{"text":"floating-point arithmetic, and that ","type":"text"},{"code":"q","type":"codeVoice"},{"type":"text","text":" may not be representable in any"},{"text":" ","type":"text"},{"type":"text","text":"available integer type."}]},{"inlineContent":[{"type":"text","text":"The following example calculates the remainder of dividing 8.625 by 0.75:"}],"type":"paragraph"},{"code":["var x = 8.625","print(x \/ 0.75)","\/\/ Prints \"11.5\"","","let q = (x \/ 0.75).rounded(.toNearestOrEven)","\/\/ q == 12.0","x.formRemainder(dividingBy: 0.75)","\/\/ x == -0.375","","let x1 = 0.75 * q + x","\/\/ x1 == 8.625"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If this value and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" are finite numbers, the remainder is in the"},{"type":"text","text":" "},{"text":"closed range ","type":"text"},{"code":"-abs(other \/ 2)...abs(other \/ 2)","type":"codeVoice"},{"text":". The","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"formRemainder(dividingBy:)"},{"text":" method is always exact.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/bigdecimal\/bigdecimal\/formremainder(dividingby:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"BigDecimal"}],"roleHeading":"Instance Method","title":"formRemainder(dividingBy:)","extendedModule":"BigDecimal","externalID":"s:10BigDecimalAAV13formRemainder10dividingByyAB_tF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formRemainder"},{"kind":"text","text":"("},{"text":"dividingBy","kind":"externalParam"},{"text":": `Self`","kind":"text"},{"kind":"text","text":")"}],"role":"symbol"},"identifier":{"url":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/formRemainder(dividingBy:)","interfaceLanguage":"swift"},"references":{"doc://bigdecimal.BigDecimal/documentation/BigDecimal":{"url":"\/documentation\/bigdecimal","type":"topic","abstract":[{"text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper","type":"text"},{"type":"text","text":" "},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"title":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","kind":"symbol","role":"collection"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/formRemainder(dividingBy:)":{"kind":"symbol","title":"formRemainder(dividingBy:)","url":"\/documentation\/bigdecimal\/bigdecimal\/formremainder(dividingby:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formRemainder","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dividingBy"},{"text":": `Self`","kind":"text"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/formRemainder(dividingBy:)","abstract":[{"text":"Replaces this value with the remainder of itself divided by the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value."}],"type":"topic"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/FloatingPoint-Implementations":{"type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/FloatingPoint-Implementations","title":"FloatingPoint Implementations","role":"collectionGroup","url":"\/documentation\/bigdecimal\/bigdecimal\/floatingpoint-implementations"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/maxDigits":{"kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/maxdigits","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"maxDigits","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol","abstract":[],"title":"maxDigits","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BigDecimal","kind":"identifier"}],"title":"BigDecimal","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BigDecimal","kind":"identifier"}],"abstract":[{"type":"text","text":"A signed decimal value of unbounded precision (actually there is a"},{"type":"text","text":" "},{"text":"practical limit defined by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits"},{"type":"text","text":" of 200 that the user can change)."},{"type":"text","text":" "},{"text":"A ","type":"text"},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","isActive":true},{"type":"text","text":" value is represented as a signed "},{"code":"BInt","type":"codeVoice"},{"text":" significand","type":"text"},{"type":"text","text":" "},{"text":"and a signed ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" exponent that is limited to ten digits.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The value of a Self is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},{"type":"text","text":" * 10^"},{"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","isActive":true},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/digits":{"kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/digits","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"digits","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BInt","preciseIdentifier":"s:6BigInt4BIntV"}],"role":"symbol","abstract":[{"type":"text","text":"The signed BInt significand"}],"title":"digits","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/exponent":{"url":"\/documentation\/bigdecimal\/bigdecimal\/exponent","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The signed exponent - the value of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"self"}]},{"type":"text","text":" is "},{"inlineContent":[{"text":"self.significand","type":"text"}],"type":"emphasis"},{"type":"text","text":" *"},{"type":"text","text":" "},{"type":"text","text":"10^"},{"inlineContent":[{"type":"text","text":"self.exponent"}],"type":"emphasis"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"exponent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","title":"exponent","type":"topic"}}}