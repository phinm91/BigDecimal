{"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Initializer","modules":[{"relatedModules":["Swift"],"name":"BigDecimal"}],"extendedModule":"Swift","symbolKind":"init","title":"init(exactly:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:s17FixedWidthIntegerP10BigDecimalE7exactlyxSgqd___tcAC0E13FloatingPointRd__lufc1TL_qd__mfp"},{"text":")","kind":"text"}],"externalID":"s:s17FixedWidthIntegerP10BigDecimalE7exactlyxSgqd___tcAC0E13FloatingPointRd__lufc::SYNTHESIZED::s:10BigDecimal03RawB0V","role":"symbol"},"identifier":{"url":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/RawDecimal\/init(exactly:)-41z7o","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"text":" ","type":"text"},{"type":"text","text":"represented exactly."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"?<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":" "},{"text":"source","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s17FixedWidthIntegerP10BigDecimalE7exactlyxSgqd___tcAC0E13FloatingPointRd__lufc1TL_qd__mfp","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10BigDecimal0B13FloatingPointP","text":"DecimalFloatingPoint","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/DecimalFloatingPoint","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"source","content":[{"inlineContent":[{"type":"text","text":"A floating-point value to convert to an integer."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the value passed as "},{"code":"source","type":"codeVoice"},{"type":"text","text":" is not representable exactly, the result"},{"type":"text","text":" "},{"text":"is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":". In the following example, the constant "},{"type":"codeVoice","code":"x"},{"text":" is successfully","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"created from a value of "},{"type":"codeVoice","code":"21.0"},{"type":"text","text":", while the attempt to initialize the"},{"text":" ","type":"text"},{"type":"text","text":"constant "},{"code":"y","type":"codeVoice"},{"type":"text","text":" from "},{"code":"21.5","type":"codeVoice"},{"text":" fails:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let x = Int(exactly: 21.0)","\/\/ x == Optional(21)","let y = Int(exactly: 21.5)","\/\/ y == nil"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigdecimal\/rawdecimal\/init(exactly:)-41z7o"]}],"hierarchy":{"paths":[["doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/RawDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/RawDecimal\/FixedWidthInteger-Implementations"]]},"references":{"doc://bigdecimal.BigDecimal/documentation/BigDecimal/RawDecimal/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/RawDecimal\/FixedWidthInteger-Implementations","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/bigdecimal\/rawdecimal\/fixedwidthinteger-implementations","title":"FixedWidthInteger Implementations","abstract":[]},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/RawDecimal":{"abstract":[],"type":"topic","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/RawDecimal","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RawDecimal","kind":"identifier"}],"kind":"symbol","title":"RawDecimal","url":"\/documentation\/bigdecimal\/rawdecimal","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RawDecimal"}]},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/RawDecimal/init(exactly:)-41z7o":{"kind":"symbol","abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"type":"text","text":" "},{"type":"text","text":"represented exactly."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s17FixedWidthIntegerP10BigDecimalE7exactlyxSgqd___tcAC0E13FloatingPointRd__lufc1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"type":"topic","title":"init(exactly:)","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/RawDecimal\/init(exactly:)-41z7o","role":"symbol","url":"\/documentation\/bigdecimal\/rawdecimal\/init(exactly:)-41z7o"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/DecimalFloatingPoint":{"title":"DecimalFloatingPoint","type":"topic","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/DecimalFloatingPoint","abstract":[{"type":"text","text":"A radix-10 (decimal) floating-point type."}],"role":"symbol","url":"\/documentation\/bigdecimal\/decimalfloatingpoint","navigatorTitle":[{"kind":"identifier","text":"DecimalFloatingPoint"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecimalFloatingPoint"}]},"doc://bigdecimal.BigDecimal/documentation/BigDecimal":{"abstract":[{"text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"title":"BigDecimal","type":"topic","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","url":"\/documentation\/bigdecimal","role":"collection","kind":"symbol"}}}