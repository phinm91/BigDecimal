{"metadata":{"roleHeading":"Type Method","extendedModule":"BigDecimal","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDoubleValue"},{"kind":"text","text":"(`Self`"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"modules":[{"name":"BigDecimal"}],"title":"isDoubleValue(_:)","externalID":"s:10BigDecimalAAV13isDoubleValueySbABFZ","role":"symbol","symbolKind":"method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDoubleValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": `Self`","kind":"text"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal"},{"type":"text","text":" number to check"}]}],"name":"value"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" can be represented as ","type":"text"},{"code":"Double","type":"codeVoice"},{"type":"text","text":" value"}]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"If this returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" you can call ","type":"text"},{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/asDouble()","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"without fear of getting ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/infinity"},{"text":" or -","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/infinity"},{"type":"text","text":" as result."}],"type":"paragraph"},{"inlineContent":[{"text":"Example: ","type":"text"},{"type":"codeVoice","code":"BigDecimal.isDoubleValue(BigDecimal(\"1E309\"))"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"because ","type":"text"},{"type":"codeVoice","code":"BigDecimal(\"1E309\").asDouble()"},{"text":" returns ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/infinity"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: This method does "},{"inlineContent":[{"type":"text","text":"not"}],"type":"strong"},{"text":" check for possible loss of precision.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example ","type":"text"},{"code":"BigDecimalMath.isDoubleValue(BigDecimal(\"1.23400000000000000000000000000000001\"))","type":"codeVoice"},{"text":" will return ","type":"text"},{"type":"codeVoice","code":"true"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"because ","type":"text"},{"code":"BigDecimal(\"1.23400000000000000000000000000000001\").asDouble()","type":"codeVoice"},{"type":"text","text":" returns a valid double value,"},{"type":"text","text":" "},{"type":"text","text":"although it loses precision and returns "},{"type":"codeVoice","code":"1.234"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"code":"BigDecimalMath.isDoubleValue(BigDecimal(\"1E-325\"))","type":"codeVoice"},{"text":" will return ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" ","type":"text"},{"type":"text","text":"although this value is smaller than -"},{"type":"codeVoice","code":"Double.greatestFiniteMagnitude"},{"text":" ","type":"text"},{"text":"(and therefore outside the range of values that can be represented as ","type":"text"},{"type":"codeVoice","code":"Double"},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"because ","type":"text"},{"type":"codeVoice","code":"BigDecimal(\"1E-325\").asDouble()"},{"type":"text","text":" returns "},{"code":"0","type":"codeVoice"},{"type":"text","text":" which is a legal"},{"text":" ","type":"text"},{"text":"value with loss of precision.","type":"text"}]}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns whether the specified "},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal"},{"type":"text","text":" value can be represented"},{"type":"text","text":" "},{"text":"as ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigdecimal\/bigdecimal\/isdoublevalue(_:)"]}],"hierarchy":{"paths":[["doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal"]]},"identifier":{"url":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/isDoubleValue(_:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/exponent":{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","abstract":[{"text":"The signed exponent - the value of ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"self","type":"text"}]},{"type":"text","text":" is "},{"type":"emphasis","inlineContent":[{"text":"self.significand","type":"text"}]},{"type":"text","text":" *"},{"text":" ","type":"text"},{"text":"10^","type":"text"},{"type":"emphasis","inlineContent":[{"text":"self.exponent","type":"text"}]}],"title":"exponent","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exponent"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"url":"\/documentation\/bigdecimal\/bigdecimal\/exponent","type":"topic"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/isDoubleValue(_:)":{"title":"isDoubleValue(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isDoubleValue","kind":"identifier"},{"text":"(`Self`","kind":"text"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/isDoubleValue(_:)","url":"\/documentation\/bigdecimal\/bigdecimal\/isdoublevalue(_:)","abstract":[{"type":"text","text":"Returns whether the specified "},{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","isActive":true,"type":"reference"},{"text":" value can be represented","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as "},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}]},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/maxDigits":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"maxDigits"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits","kind":"symbol","title":"maxDigits","url":"\/documentation\/bigdecimal\/bigdecimal\/maxdigits","role":"symbol","abstract":[],"type":"topic"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal":{"abstract":[{"text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"title":"BigDecimal","type":"topic","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","url":"\/documentation\/bigdecimal","role":"collection","kind":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/asDouble()":{"title":"asDouble()","kind":"symbol","type":"topic","abstract":[{"inlineContent":[{"text":"self","type":"text"}],"type":"emphasis"},{"type":"text","text":" as a Double"}],"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/asDouble()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asDouble"},{"kind":"text","text":"() -> "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"role":"symbol","url":"\/documentation\/bigdecimal\/bigdecimal\/asdouble()"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/infinity":{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/infinity","type":"topic","title":"infinity","url":"\/documentation\/bigdecimal\/bigdecimal\/infinity","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"infinity","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10BigDecimalAAV","text":"BigDecimal","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"BigDecimal(‘Infinity’)"}],"role":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal/digits":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"digits"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6BigInt4BIntV","text":"BInt","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits","url":"\/documentation\/bigdecimal\/bigdecimal\/digits","abstract":[{"type":"text","text":"The signed BInt significand"}],"type":"topic","title":"digits","kind":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/BigDecimal":{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BigDecimal","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"BigDecimal","kind":"identifier"}],"role":"symbol","type":"topic","title":"BigDecimal","abstract":[{"text":"A signed decimal value of unbounded precision (actually there is a","type":"text"},{"text":" ","type":"text"},{"text":"practical limit defined by ","type":"text"},{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits","isActive":true,"type":"reference"},{"type":"text","text":" of 200 that the user can change)."},{"type":"text","text":" "},{"type":"text","text":"A "},{"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal","isActive":true,"type":"reference"},{"text":" value is represented as a signed ","type":"text"},{"type":"codeVoice","code":"BInt"},{"text":" significand","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and a signed "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" exponent that is limited to ten digits."},{"type":"text","text":" "},{"type":"text","text":"The value of a Self is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},{"type":"text","text":" * 10^"},{"isActive":true,"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/bigdecimal\/bigdecimal"}}}