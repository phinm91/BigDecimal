{"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"extendedModule":"BigDecimal","symbolKind":"method","conformance":{"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"modules":[{"name":"BigDecimal"}],"externalID":"s:10BigDecimal0B13FloatingPointPAAs17FixedWidthInteger14RawSignificandRpzrlE6random2inxSNyxG_tFZ::SYNTHESIZED::s:10BigDecimal9Decimal32V","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Type Method","role":"symbol","title":"random(in:)"},"hierarchy":{"paths":[["doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32\/DecimalFloatingPoint-Implementations"]]},"identifier":{"url":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32\/random(in:)-3akit","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/bigdecimal\/decimal32\/random(in:)-3akit"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"range"},{"text":": ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}]}]},{"parameters":[{"name":"range","content":[{"inlineContent":[{"type":"text","text":"The range in which to create a random value."},{"type":"text","text":" "},{"type":"text","text":"Must be finite."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A random value within the bounds of ","type":"text"},{"code":"range","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method to generate a floating-point value within a specific"},{"type":"text","text":" "},{"text":"range. This example creates three new values in the range","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"10.0 ... 20.0"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["    for _ in 1...3 {","        print(Double.random(in: 10.0 ... 20.0))","    }","    \/\/ Prints \"18.1900709259179\"","    \/\/ Prints \"14.2286325689993\"","    \/\/ Prints \"13.1485686260762\""]},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"random()"},{"text":" static method chooses a random value from a continuous","type":"text"},{"type":"text","text":" "},{"text":"uniform distribution in ","type":"text"},{"type":"codeVoice","code":"range"},{"text":", and then converts that value to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"nearest representable value in this type. Depending on the size and span"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"range"},{"type":"text","text":", some concrete values may be represented more frequently than"},{"type":"text","text":" "},{"type":"text","text":"others."}],"type":"paragraph"},{"inlineContent":[{"text":"This method is equivalent to calling ","type":"text"},{"code":"random(in:using:)","type":"codeVoice"},{"type":"text","text":", passing in the"},{"text":" ","type":"text"},{"text":"systemâ€™s default random generator.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"references":{"doc://bigdecimal.BigDecimal/documentation/BigDecimal/Decimal32":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Decimal32","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32","title":"Decimal32","kind":"symbol","url":"\/documentation\/bigdecimal\/decimal32","abstract":[{"type":"text","text":"Implementation of the 32-bit Decimal32 floating-point operations from"},{"type":"text","text":" "},{"type":"text","text":"IEEE STD 754-2019 for Floating-Point Arithmetic."}],"navigatorTitle":[{"text":"Decimal32","kind":"identifier"}],"role":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/Decimal32/random(in:)-3akit":{"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"type":"topic","role":"symbol","url":"\/documentation\/bigdecimal\/decimal32\/random(in:)-3akit","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32\/random(in:)-3akit","abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"title":"random(in:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://bigdecimal.BigDecimal/documentation/BigDecimal":{"abstract":[{"text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"title":"BigDecimal","type":"topic","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","url":"\/documentation\/bigdecimal","role":"collection","kind":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/Decimal32/DecimalFloatingPoint-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal32\/DecimalFloatingPoint-Implementations","url":"\/documentation\/bigdecimal\/decimal32\/decimalfloatingpoint-implementations","role":"collectionGroup","type":"topic","title":"DecimalFloatingPoint Implementations"}}}