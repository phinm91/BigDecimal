{"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"range"},{"text":": ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The range in which to create a random value."},{"type":"text","text":" "},{"type":"codeVoice","code":"range"},{"text":" must be finite and non-empty.","type":"text"}],"type":"paragraph"}],"name":"range"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A random value within the bounds of "},{"type":"codeVoice","code":"range"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this method to generate a floating-point value within a specific","type":"text"},{"type":"text","text":" "},{"type":"text","text":"range. This example creates three new values in the range"},{"type":"text","text":" "},{"code":"10.0 ..< 20.0","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["    for _ in 1...3 {","        print(Double.random(in: 10.0 ..< 20.0))","    }","    \/\/ Prints \"18.1900709259179\"","    \/\/ Prints \"14.2286325689993\"","    \/\/ Prints \"13.1485686260762\""]},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"random()"},{"text":" static method chooses a random value from a continuous","type":"text"},{"type":"text","text":" "},{"type":"text","text":"uniform distribution in "},{"type":"codeVoice","code":"range"},{"text":", and then converts that value to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"nearest representable value in this type. Depending on the size and span"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"range"},{"type":"text","text":", some concrete values may be represented more frequently than"},{"type":"text","text":" "},{"type":"text","text":"others."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This method is equivalent to calling "},{"type":"codeVoice","code":"random(in:using:)"},{"type":"text","text":", passing in the"},{"type":"text","text":" "},{"type":"text","text":"systemâ€™s default random generator."}],"type":"paragraph"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal128","doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal128\/DecimalFloatingPoint-Implementations"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigdecimal\/decimal128\/random(in:)-71re2"]}],"identifier":{"url":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal128\/random(in:)-71re2","interfaceLanguage":"swift"},"abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"metadata":{"title":"random(in:)","externalID":"s:10BigDecimal0B13FloatingPointPAAs17FixedWidthInteger14RawSignificandRpzrlE6random2inxSnyxG_tFZ::SYNTHESIZED::s:10BigDecimal10Decimal128V","extendedModule":"BigDecimal","roleHeading":"Type Method","symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RawSignificand"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"BigDecimal"}]},"references":{"doc://bigdecimal.BigDecimal/documentation/BigDecimal/Decimal128/random(in:)-71re2":{"kind":"symbol","url":"\/documentation\/bigdecimal\/decimal128\/random(in:)-71re2","abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal128\/random(in:)-71re2","role":"symbol","type":"topic","title":"random(in:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"conformance":{"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://bigdecimal.BigDecimal/documentation/BigDecimal":{"abstract":[{"text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"title":"BigDecimal","type":"topic","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal","url":"\/documentation\/bigdecimal","role":"collection","kind":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/Decimal128":{"type":"topic","abstract":[{"type":"text","text":"Implementation of the 128-bit Decimal128 floating-point operations from"},{"text":" ","type":"text"},{"text":"IEEE STD 754-2019 for Floating-Point Arithmetic.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Decimal128","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Decimal128"}],"url":"\/documentation\/bigdecimal\/decimal128","title":"Decimal128","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal128","kind":"symbol"},"doc://bigdecimal.BigDecimal/documentation/BigDecimal/Decimal128/DecimalFloatingPoint-Implementations":{"url":"\/documentation\/bigdecimal\/decimal128\/decimalfloatingpoint-implementations","role":"collectionGroup","abstract":[],"title":"DecimalFloatingPoint Implementations","kind":"article","identifier":"doc:\/\/bigdecimal.BigDecimal\/documentation\/BigDecimal\/Decimal128\/DecimalFloatingPoint-Implementations","type":"topic"}}}